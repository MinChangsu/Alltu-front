{"ast":null,"code":"var _jsxFileName = \"/Users/rhkdrb99/\\u1102\\u1162 \\u1100\\u1165/portfoilo/src/component/test/test.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst wholeTextArray = [\"apple\", \"banana\", \"coding\", \"javascript\", \"원티드\", \"프리온보딩\", \"프론트엔드\"];\nconst AutoComplete = () => {\n  _s();\n  const [inputValue, setInputValue] = useState(\"\");\n  const [isHaveInputValue, setIsHaveInputValue] = useState(false);\n  const [dropDownList, setDropDownList] = useState(wholeTextArray);\n  const [dropDownItemIndex, setDropDownItemIndex] = useState(-1);\n  const showDropDownList = () => {\n    if (inputValue === \"\") {\n      setIsHaveInputValue(false);\n      setDropDownList([]);\n    } else {\n      const choosenTextList = wholeTextArray.filter(textItem => textItem.includes(inputValue));\n      setDropDownList(choosenTextList);\n    }\n  };\n  const changeInputValue = event => {\n    setInputValue(event.target.value);\n    setIsHaveInputValue(true);\n  };\n  const clickDropDownItem = clickedItem => {\n    setInputValue(clickedItem);\n    setIsHaveInputValue(false);\n  };\n  const handleDropDownKey = event => {\n    //input에 값이 있을때만 작동\n    if (isHaveInputValue) {\n      if (event.key === \"ArrowDown\" && dropDownList.length - 1 > dropDownItemIndex) {\n        setDropDownItemIndex(dropDownItemIndex + 1);\n      }\n      if (event.key === \"ArrowUp\" && dropDownItemIndex >= 0) setDropDownItemIndex(dropDownItemIndex - 1);\n      if (event.key === \"Enter\" && dropDownItemIndex >= 0) {\n        clickDropDownItem(dropDownList[dropDownItemIndex]);\n        setDropDownItemIndex(-1);\n      }\n    }\n  };\n  useEffect(showDropDownList, [inputValue]);\n  return /*#__PURE__*/_jsxDEV(WholeBox, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"AutoComplete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InputBox, {\n      isHaveInputValue: isHaveInputValue,\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        type: \"text\",\n        value: inputValue,\n        onChange: changeInputValue,\n        onKeyUp: handleDropDownKey\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DeleteButton, {\n        onClick: () => setInputValue(\"\"),\n        children: \"\\xD7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), isHaveInputValue && /*#__PURE__*/_jsxDEV(DropDownBox, {\n      children: [dropDownList.length === 0 && /*#__PURE__*/_jsxDEV(DropDownItem, {\n        children: \"\\uD574\\uB2F9\\uD558\\uB294 \\uB2E8\\uC5B4\\uAC00 \\uC5C6\\uC2B5\\uB2C8\\uB2E4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }, this), dropDownList.map((dropDownItem, dropDownIndex) => {\n        return /*#__PURE__*/_jsxDEV(DropDownItem, {\n          onClick: () => clickDropDownItem(dropDownItem),\n          onMouseOver: () => setDropDownItemIndex(dropDownIndex),\n          className: dropDownItemIndex === dropDownIndex ? \"selected\" : \"\",\n          children: dropDownItem\n        }, dropDownIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 15\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n_s(AutoComplete, \"rrrUjaxR8OItrdO5U8U6KuDA7Yo=\");\n_c = AutoComplete;\nconst activeBorderRadius = \"16px 16px 0 0\";\nconst inactiveBorderRadius = \"16px 16px 16px 16px\";\nconst WholeBox = styled.div`\n  padding: 10px;\n`;\n_c2 = WholeBox;\nconst InputBox = styled.div`\n  display: flex;\n  flex-direction: row;\n  padding: 16px;\n  border: 1px solid rgba(0, 0, 0, 0.3);\n  border-radius: {(props) =>\n    props.isHaveInputValue ? activeBorderRadius : inactiveBorderRadius};\n  z-index: 3;\n\n  &:focus-within {\n    box-shadow: 0 10px 10px rgb(0, 0, 0, 0.3);\n  }\n`;\n_c3 = InputBox;\nconst Input = styled.input`\n  flex: 1 0 0;\n  margin: 0;\n  padding: 0;\n  background-color: transparent;\n  border: none;\n  outline: none;\n  font-size: 16px;\n`;\n_c4 = Input;\nconst DeleteButton = styled.div`\n  cursor: pointer;\n`;\n_c5 = DeleteButton;\nconst DropDownBox = styled.ul`\n  display: block;\n  margin: 0 auto;\n  padding: 8px 0;\n  background-color: white;\n  border: 1px solid rgba(0, 0, 0, 0.3);\n  border-top: none;\n  border-radius: 0 0 16px 16px;\n  box-shadow: 0 10px 10px rgb(0, 0, 0, 0.3);\n  list-style-type: none;\n  z-index: 3;\n`;\n_c6 = DropDownBox;\nconst DropDownItem = styled.li`\n  padding: 0 16px;\n\n  &.selected {\n    background-color: lightgray;\n  }\n`;\n_c7 = DropDownItem;\nexport default AutoComplete;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n$RefreshReg$(_c, \"AutoComplete\");\n$RefreshReg$(_c2, \"WholeBox\");\n$RefreshReg$(_c3, \"InputBox\");\n$RefreshReg$(_c4, \"Input\");\n$RefreshReg$(_c5, \"DeleteButton\");\n$RefreshReg$(_c6, \"DropDownBox\");\n$RefreshReg$(_c7, \"DropDownItem\");","map":{"version":3,"names":["React","useEffect","useState","styled","jsxDEV","_jsxDEV","wholeTextArray","AutoComplete","_s","inputValue","setInputValue","isHaveInputValue","setIsHaveInputValue","dropDownList","setDropDownList","dropDownItemIndex","setDropDownItemIndex","showDropDownList","choosenTextList","filter","textItem","includes","changeInputValue","event","target","value","clickDropDownItem","clickedItem","handleDropDownKey","key","length","WholeBox","children","fileName","_jsxFileName","lineNumber","columnNumber","InputBox","Input","type","onChange","onKeyUp","DeleteButton","onClick","DropDownBox","DropDownItem","map","dropDownItem","dropDownIndex","onMouseOver","className","_c","activeBorderRadius","inactiveBorderRadius","div","_c2","_c3","input","_c4","_c5","ul","_c6","li","_c7","$RefreshReg$"],"sources":["/Users/rhkdrb99/내 거/portfoilo/src/component/test/test.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\n\nconst wholeTextArray = [\n  \"apple\",\n  \"banana\",\n  \"coding\",\n  \"javascript\",\n  \"원티드\",\n  \"프리온보딩\",\n  \"프론트엔드\",\n];\n\nconst AutoComplete = () => {\n  const [inputValue, setInputValue] = useState(\"\");\n  const [isHaveInputValue, setIsHaveInputValue] = useState(false);\n  const [dropDownList, setDropDownList] = useState(wholeTextArray);\n  const [dropDownItemIndex, setDropDownItemIndex] = useState(-1);\n\n  const showDropDownList = () => {\n    if (inputValue === \"\") {\n      setIsHaveInputValue(false);\n      setDropDownList([]);\n    } else {\n      const choosenTextList = wholeTextArray.filter((textItem) =>\n        textItem.includes(inputValue)\n      );\n      setDropDownList(choosenTextList);\n    }\n  };\n\n  const changeInputValue = (event) => {\n    setInputValue(event.target.value);\n    setIsHaveInputValue(true);\n  };\n\n  const clickDropDownItem = (clickedItem) => {\n    setInputValue(clickedItem);\n    setIsHaveInputValue(false);\n  };\n\n  const handleDropDownKey = (event) => {\n    //input에 값이 있을때만 작동\n    if (isHaveInputValue) {\n      if (\n        event.key === \"ArrowDown\" &&\n        dropDownList.length - 1 > dropDownItemIndex\n      ) {\n        setDropDownItemIndex(dropDownItemIndex + 1);\n      }\n\n      if (event.key === \"ArrowUp\" && dropDownItemIndex >= 0)\n        setDropDownItemIndex(dropDownItemIndex - 1);\n      if (event.key === \"Enter\" && dropDownItemIndex >= 0) {\n        clickDropDownItem(dropDownList[dropDownItemIndex]);\n        setDropDownItemIndex(-1);\n      }\n    }\n  };\n\n  useEffect(showDropDownList, [inputValue]);\n\n  return (\n    <WholeBox>\n      <h1>AutoComplete</h1>\n      <InputBox isHaveInputValue={isHaveInputValue}>\n        <Input\n          type=\"text\"\n          value={inputValue}\n          onChange={changeInputValue}\n          onKeyUp={handleDropDownKey}\n        />\n        <DeleteButton onClick={() => setInputValue(\"\")}>&times;</DeleteButton>\n      </InputBox>\n      {isHaveInputValue && (\n        <DropDownBox>\n          {dropDownList.length === 0 && (\n            <DropDownItem>해당하는 단어가 없습니다</DropDownItem>\n          )}\n          {dropDownList.map((dropDownItem, dropDownIndex) => {\n            return (\n              <DropDownItem\n                key={dropDownIndex}\n                onClick={() => clickDropDownItem(dropDownItem)}\n                onMouseOver={() => setDropDownItemIndex(dropDownIndex)}\n                className={\n                  dropDownItemIndex === dropDownIndex ? \"selected\" : \"\"\n                }\n              >\n                {dropDownItem}\n              </DropDownItem>\n            );\n          })}\n        </DropDownBox>\n      )}\n    </WholeBox>\n  );\n};\n\nconst activeBorderRadius = \"16px 16px 0 0\";\nconst inactiveBorderRadius = \"16px 16px 16px 16px\";\n\nconst WholeBox = styled.div`\n  padding: 10px;\n`;\n\nconst InputBox = styled.div`\n  display: flex;\n  flex-direction: row;\n  padding: 16px;\n  border: 1px solid rgba(0, 0, 0, 0.3);\n  border-radius: {(props) =>\n    props.isHaveInputValue ? activeBorderRadius : inactiveBorderRadius};\n  z-index: 3;\n\n  &:focus-within {\n    box-shadow: 0 10px 10px rgb(0, 0, 0, 0.3);\n  }\n`;\n\nconst Input = styled.input`\n  flex: 1 0 0;\n  margin: 0;\n  padding: 0;\n  background-color: transparent;\n  border: none;\n  outline: none;\n  font-size: 16px;\n`;\n\nconst DeleteButton = styled.div`\n  cursor: pointer;\n`;\n\nconst DropDownBox = styled.ul`\n  display: block;\n  margin: 0 auto;\n  padding: 8px 0;\n  background-color: white;\n  border: 1px solid rgba(0, 0, 0, 0.3);\n  border-top: none;\n  border-radius: 0 0 16px 16px;\n  box-shadow: 0 10px 10px rgb(0, 0, 0, 0.3);\n  list-style-type: none;\n  z-index: 3;\n`;\n\nconst DropDownItem = styled.li`\n  padding: 0 16px;\n\n  &.selected {\n    background-color: lightgray;\n  }\n`;\n\nexport default AutoComplete;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}