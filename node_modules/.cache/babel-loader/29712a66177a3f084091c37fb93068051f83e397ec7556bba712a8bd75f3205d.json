{"ast":null,"code":"var _jsxFileName = \"/Users/rhkdrb99/\\u1102\\u1162 \\u1100\\u1165/portfoilo/src/component/contents/content/Area.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport StockWidget from \"../../../widget/stockgraph/StockWidget\";\n// import AutoComplete from \"../../test/test\";\nimport styles from \"./Area.module.css\";\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst wholeTextArray = [];\n\n// prettier-ignore\nconst data = `{\n  \"symbols\":[[\"Apple\", \"AAPL|1D\"],\n  [\"Google\", \"GOOGL|1D\"]\n  ],\n  \"chartOnly\": false,\n  \"width\": \"700\",\n  \"height\": \"450\",\n  \"locale\": \"en\",\n  \"colorTheme\": \"dark\",\n  \"autosize\": false,\n  \"showVolume\": false,\n  \"showMA\": false,\n  \"hideDateRanges\": false,\n  \"hideMarketStatus\": false,\n  \"hideSymbolLogo\": false,\n  \"scalePosition\": \"right\",\n  \"scaleMode\": \"Normal\",\n  \"fontFamily\": \"-apple-system, BlinkMacSystemFont, Trebuchet MS, Roboto, Ubuntu, sans-serif\",\n  \"fontSize\": \"10\",\n  \"noTimeScale\": false,\n  \"valuesTracking\": \"1\",\n  \"changeMode\": \"price-and-percent\",\n  \"chartType\": \"line\",\n  \"maLineColor\": \"#2962FF\",\n  \"maLineWidth\": 1,\n  \"maLength\": 9\n}`;\nexport default function Area() {\n  _s();\n  const [stockData, setStockData] = useState(data);\n  const [gptValue, setGptValue] = useState(\"\");\n  const [gptRes, setGptRes] = useState(\"\");\n  const PushData = () => {\n    let JsonData = JSON.parse(stockData);\n    JsonData.symbols.push([\"Microsoft\", \"MSFT|1D\"]);\n    let LastData = JSON.stringify(JsonData);\n    setStockData(LastData);\n  };\n\n  // input에 입력한 값 includes를 사용\n  const [inputValue, setInputValue] = useState(\"\");\n\n  // input값이 있으면 true 없으면 false\n  const [isHaveInputValue, setIsHaveInputValue] = useState(false);\n\n  // dropdwonlist를 DB와 연동해 set을 하면 됨.\n  const [dropDownList, setDropDownList] = useState([]);\n\n  // dropDownList에 있는 요소를 선택하기 위해 마우스를 올렸을 때 효과를 주기 위한 인덱스 번호 설정\n  const [dropDownItemIndex, setDropDownItemIndex] = useState(-1);\n  const showDropDownList = () => {\n    if (inputValue === \"\") {\n      setIsHaveInputValue(false);\n      setDropDownList([]);\n    } else {\n      const choosenTextList = wholeTextArray.filter(textItem => textItem.includes(inputValue));\n      setDropDownList(choosenTextList);\n    }\n  };\n  const changeInputValue = event => {\n    setInputValue(event.target.value);\n    setIsHaveInputValue(true);\n    fetch(`https://port-0-alltu-search-6g2llfxqu2r0.sel3.cloudtype.app/search?company=${event.target.value}`).then(res => res.json()).then(data => setDropDownList(data));\n  };\n  const clickDropDownItem = clickedItem => {\n    setInputValue(clickedItem);\n    setIsHaveInputValue(false);\n  };\n  const handleDropDownKey = event => {\n    //input에 값이 있을때만 작동\n    if (isHaveInputValue) {\n      if (event.key === \"ArrowDown\" && dropDownList.length - 1 > dropDownItemIndex) {\n        setDropDownItemIndex(dropDownItemIndex + 1);\n      }\n      if (event.key === \"ArrowUp\" && dropDownItemIndex >= 0) setDropDownItemIndex(dropDownItemIndex - 1);\n      if (event.key === \"Enter\" && dropDownItemIndex >= 0) {\n        clickDropDownItem(dropDownList[dropDownItemIndex]);\n        setDropDownItemIndex(-1);\n      }\n    }\n  };\n  useEffect(showDropDownList, [inputValue]);\n  const sendInputValue = e => {\n    e.preventDefault();\n    setInputValue(\"\");\n    if (inputValue === \"MSFT\") {\n      PushData();\n    }\n  };\n  const sendChatGPT = e => {\n    e.preventDefault();\n    console.log(gptValue);\n    setGptValue(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.stockArea,\n      children: [/*#__PURE__*/_jsxDEV(StockWidget, {\n        data: stockData,\n        className: styles.stockgraph\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          setStockData(data);\n        },\n        children: \"CHO\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.stockEx,\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          children: \"\\uD5A5\\uD6C4 \\uC804\\uB9DD?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n          style: {\n            color: \"white\"\n          },\n          children: stockData.symbols\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.searchArea,\n      children: /*#__PURE__*/_jsxDEV(WholeBox, {\n        children: [/*#__PURE__*/_jsxDEV(OutlineInputBox, {\n          children: /*#__PURE__*/_jsxDEV(InputBox, {\n            className: styles.inputBox,\n            isHaveInputValue: isHaveInputValue,\n            children: [/*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: sendInputValue,\n              children: /*#__PURE__*/_jsxDEV(Input, {\n                type: \"text\",\n                value: inputValue,\n                onChange: changeInputValue,\n                onKeyUp: handleDropDownKey\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(SearchButton, {\n              onClick: () => {\n                PushData();\n                setInputValue(\"\");\n              },\n              children: \"+\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this), isHaveInputValue && /*#__PURE__*/_jsxDEV(DropDownBox, {\n          children: [dropDownList.length === 0 && /*#__PURE__*/_jsxDEV(DropDownItem, {\n            children: \"\\uD574\\uB2F9\\uD558\\uB294 \\uB2E8\\uC5B4\\uAC00 \\uC5C6\\uC2B5\\uB2C8\\uB2E4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 17\n          }, this), dropDownList.map((dropDownItem, dropDownIndex) => {\n            return /*#__PURE__*/_jsxDEV(DropDownItem, {\n              onClick: () => clickDropDownItem(dropDownItem),\n              onMouseOver: () => setDropDownItemIndex(dropDownIndex),\n              className: dropDownItemIndex === dropDownIndex ? \"selected\" : \"\",\n              children: dropDownItem\n            }, dropDownIndex, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 19\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: sendChatGPT,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: e => {\n          setGptValue(e.target.value);\n          console.log(gptValue);\n        },\n        value: gptValue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(Area, \"ADF0Hq0VZmStlTuAwukd4rYKv4k=\");\n_c = Area;\nconst WholeBox = styled.div`\n  padding: 10px;\n`;\n_c2 = WholeBox;\nconst OutlineInputBox = styled.div`\n  border: 10px solid black;\n  border-radius: 5px;\n`;\n_c3 = OutlineInputBox;\nconst InputBox = styled.div`\n  display: flex;\n  flex-direction: row;\n  padding: 16px;\n  border: 5px solid white;\n  border-radius: 5px;\n\n  &:focus-within {\n    box-shadow: 0 10px 10px rgb(0, 0, 0, 0.3);\n  }\n`;\n_c4 = InputBox;\nconst Input = styled.input`\n  flex: 1;\n  margin: 0;\n  background-color: transparent;\n  border: none;\n  outline: none;\n  font-size: 32px;\n  width: 30vw;\n`;\n_c5 = Input;\nconst SearchButton = styled.div`\n  cursor: pointer;\n  padding: 0;\n  margin: 0;\n  color: white;\n  font-size: 30px;\n`;\n_c6 = SearchButton;\nconst DropDownBox = styled.ul`\n  display: block;\n  margin: 0 auto;\n  padding: 8px 0;\n  background-color: white;\n  border: 10px solid rgba(0, 0, 0, 1);\n  border-top: none;\n  border-radius: 0 0 16px 16px;\n  box-shadow: 0 10px 10px rgb(0, 0, 0, 0.3);\n  list-style-type: none;\n  z-index: 3;\n`;\n_c7 = DropDownBox;\nconst DropDownItem = styled.li`\n  padding: 0 16px;\n\n  &.selected {\n    background-color: lightgray;\n  }\n`;\n_c8 = DropDownItem;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8;\n$RefreshReg$(_c, \"Area\");\n$RefreshReg$(_c2, \"WholeBox\");\n$RefreshReg$(_c3, \"OutlineInputBox\");\n$RefreshReg$(_c4, \"InputBox\");\n$RefreshReg$(_c5, \"Input\");\n$RefreshReg$(_c6, \"SearchButton\");\n$RefreshReg$(_c7, \"DropDownBox\");\n$RefreshReg$(_c8, \"DropDownItem\");","map":{"version":3,"names":["useEffect","useState","StockWidget","styles","styled","jsxDEV","_jsxDEV","Fragment","_Fragment","wholeTextArray","data","Area","_s","stockData","setStockData","gptValue","setGptValue","gptRes","setGptRes","PushData","JsonData","JSON","parse","symbols","push","LastData","stringify","inputValue","setInputValue","isHaveInputValue","setIsHaveInputValue","dropDownList","setDropDownList","dropDownItemIndex","setDropDownItemIndex","showDropDownList","choosenTextList","filter","textItem","includes","changeInputValue","event","target","value","fetch","then","res","json","clickDropDownItem","clickedItem","handleDropDownKey","key","length","sendInputValue","e","preventDefault","sendChatGPT","console","log","children","className","stockArea","stockgraph","fileName","_jsxFileName","lineNumber","columnNumber","onClick","stockEx","style","color","searchArea","WholeBox","OutlineInputBox","InputBox","inputBox","onSubmit","Input","type","onChange","onKeyUp","SearchButton","DropDownBox","DropDownItem","map","dropDownItem","dropDownIndex","onMouseOver","_c","div","_c2","_c3","_c4","input","_c5","_c6","ul","_c7","li","_c8","$RefreshReg$"],"sources":["/Users/rhkdrb99/내 거/portfoilo/src/component/contents/content/Area.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport StockWidget from \"../../../widget/stockgraph/StockWidget\";\n// import AutoComplete from \"../../test/test\";\nimport styles from \"./Area.module.css\";\nimport styled from \"styled-components\";\n\nconst wholeTextArray = [];\n\n// prettier-ignore\nconst data = `{\n  \"symbols\":[[\"Apple\", \"AAPL|1D\"],\n  [\"Google\", \"GOOGL|1D\"]\n  ],\n  \"chartOnly\": false,\n  \"width\": \"700\",\n  \"height\": \"450\",\n  \"locale\": \"en\",\n  \"colorTheme\": \"dark\",\n  \"autosize\": false,\n  \"showVolume\": false,\n  \"showMA\": false,\n  \"hideDateRanges\": false,\n  \"hideMarketStatus\": false,\n  \"hideSymbolLogo\": false,\n  \"scalePosition\": \"right\",\n  \"scaleMode\": \"Normal\",\n  \"fontFamily\": \"-apple-system, BlinkMacSystemFont, Trebuchet MS, Roboto, Ubuntu, sans-serif\",\n  \"fontSize\": \"10\",\n  \"noTimeScale\": false,\n  \"valuesTracking\": \"1\",\n  \"changeMode\": \"price-and-percent\",\n  \"chartType\": \"line\",\n  \"maLineColor\": \"#2962FF\",\n  \"maLineWidth\": 1,\n  \"maLength\": 9\n}`;\n\nexport default function Area() {\n  const [stockData, setStockData] = useState(data);\n\n  const [gptValue, setGptValue] = useState(\"\");\n  const [gptRes, setGptRes] = useState(\"\");\n\n  const PushData = () => {\n    let JsonData = JSON.parse(stockData);\n    JsonData.symbols.push([\"Microsoft\", \"MSFT|1D\"]);\n    let LastData = JSON.stringify(JsonData);\n    setStockData(LastData);\n  };\n\n  // input에 입력한 값 includes를 사용\n  const [inputValue, setInputValue] = useState(\"\");\n\n  // input값이 있으면 true 없으면 false\n  const [isHaveInputValue, setIsHaveInputValue] = useState(false);\n\n  // dropdwonlist를 DB와 연동해 set을 하면 됨.\n  const [dropDownList, setDropDownList] = useState([]);\n\n  // dropDownList에 있는 요소를 선택하기 위해 마우스를 올렸을 때 효과를 주기 위한 인덱스 번호 설정\n  const [dropDownItemIndex, setDropDownItemIndex] = useState(-1);\n\n  const showDropDownList = () => {\n    if (inputValue === \"\") {\n      setIsHaveInputValue(false);\n      setDropDownList([]);\n    } else {\n      const choosenTextList = wholeTextArray.filter((textItem) =>\n        textItem.includes(inputValue)\n      );\n      setDropDownList(choosenTextList);\n    }\n  };\n\n  const changeInputValue = (event) => {\n    setInputValue(event.target.value);\n    setIsHaveInputValue(true);\n    fetch(\n      `https://port-0-alltu-search-6g2llfxqu2r0.sel3.cloudtype.app/search?company=${event.target.value}`\n    )\n      .then((res) => res.json())\n      .then((data) => setDropDownList(data));\n  };\n\n  const clickDropDownItem = (clickedItem) => {\n    setInputValue(clickedItem);\n    setIsHaveInputValue(false);\n  };\n\n  const handleDropDownKey = (event) => {\n    //input에 값이 있을때만 작동\n    if (isHaveInputValue) {\n      if (\n        event.key === \"ArrowDown\" &&\n        dropDownList.length - 1 > dropDownItemIndex\n      ) {\n        setDropDownItemIndex(dropDownItemIndex + 1);\n      }\n\n      if (event.key === \"ArrowUp\" && dropDownItemIndex >= 0)\n        setDropDownItemIndex(dropDownItemIndex - 1);\n      if (event.key === \"Enter\" && dropDownItemIndex >= 0) {\n        clickDropDownItem(dropDownList[dropDownItemIndex]);\n        setDropDownItemIndex(-1);\n      }\n    }\n  };\n\n  useEffect(showDropDownList, [inputValue]);\n\n  const sendInputValue = (e) => {\n    e.preventDefault();\n    setInputValue(\"\");\n    if (inputValue === \"MSFT\") {\n      PushData();\n    }\n  };\n\n  const sendChatGPT = (e) => {\n    e.preventDefault();\n    console.log(gptValue);\n    setGptValue(\"\");\n  };\n\n  return (\n    <>\n      <div className={styles.stockArea}>\n        {/* <div className={styles.stockGraph}></div> */}\n        <StockWidget data={stockData} className={styles.stockgraph} />\n        <button\n          onClick={() => {\n            setStockData(data);\n          }}\n        >\n          CHO\n        </button>\n        <div className={styles.stockEx}>\n          <h5>향후 전망?</h5>\n          <h5 style={{ color: \"white\" }}>{stockData.symbols}</h5>\n        </div>\n      </div>\n      <div className={styles.searchArea}>\n        <WholeBox>\n          <OutlineInputBox>\n            <InputBox\n              className={styles.inputBox}\n              isHaveInputValue={isHaveInputValue}\n            >\n              <form onSubmit={sendInputValue}>\n                <Input\n                  type=\"text\"\n                  value={inputValue}\n                  onChange={changeInputValue}\n                  onKeyUp={handleDropDownKey}\n                />\n              </form>\n              <SearchButton\n                onClick={() => {\n                  PushData();\n                  setInputValue(\"\");\n                }}\n              >\n                &#43;\n              </SearchButton>\n            </InputBox>\n          </OutlineInputBox>\n          {isHaveInputValue && (\n            <DropDownBox>\n              {dropDownList.length === 0 && (\n                <DropDownItem>해당하는 단어가 없습니다</DropDownItem>\n              )}\n              {dropDownList.map((dropDownItem, dropDownIndex) => {\n                return (\n                  <DropDownItem\n                    key={dropDownIndex}\n                    onClick={() => clickDropDownItem(dropDownItem)}\n                    onMouseOver={() => setDropDownItemIndex(dropDownIndex)}\n                    className={\n                      dropDownItemIndex === dropDownIndex ? \"selected\" : \"\"\n                    }\n                  >\n                    {dropDownItem}\n                  </DropDownItem>\n                );\n              })}\n            </DropDownBox>\n          )}\n        </WholeBox>\n      </div>\n      <form onSubmit={sendChatGPT}>\n        <input\n          type=\"text\"\n          onChange={(e) => {\n            setGptValue(e.target.value);\n            console.log(gptValue);\n          }}\n          value={gptValue}\n        />\n        <button type=\"submit\"></button>\n      </form>\n    </>\n  );\n}\n\nconst WholeBox = styled.div`\n  padding: 10px;\n`;\n\nconst OutlineInputBox = styled.div`\n  border: 10px solid black;\n  border-radius: 5px;\n`;\n\nconst InputBox = styled.div`\n  display: flex;\n  flex-direction: row;\n  padding: 16px;\n  border: 5px solid white;\n  border-radius: 5px;\n\n  &:focus-within {\n    box-shadow: 0 10px 10px rgb(0, 0, 0, 0.3);\n  }\n`;\n\nconst Input = styled.input`\n  flex: 1;\n  margin: 0;\n  background-color: transparent;\n  border: none;\n  outline: none;\n  font-size: 32px;\n  width: 30vw;\n`;\n\nconst SearchButton = styled.div`\n  cursor: pointer;\n  padding: 0;\n  margin: 0;\n  color: white;\n  font-size: 30px;\n`;\n\nconst DropDownBox = styled.ul`\n  display: block;\n  margin: 0 auto;\n  padding: 8px 0;\n  background-color: white;\n  border: 10px solid rgba(0, 0, 0, 1);\n  border-top: none;\n  border-radius: 0 0 16px 16px;\n  box-shadow: 0 10px 10px rgb(0, 0, 0, 0.3);\n  list-style-type: none;\n  z-index: 3;\n`;\n\nconst DropDownItem = styled.li`\n  padding: 0 16px;\n\n  &.selected {\n    background-color: lightgray;\n  }\n`;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}